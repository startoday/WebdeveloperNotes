1. what is database?
  a collection of information/data
  has an interface
 
eg: db.dogs.select()

2. SQL(relational databases) vs NoSQL (non relational databases)
SQL:是一个table， 列是user store 的信息，行是user id， 每个位置都是填写的固定的东西， 以及comments，通过user id 连接起来 （是一个 joint table，
不是user table 和 comment table id完全一样的）

non-SQL, 像JS，flexiable --mongodb: MEN, most popular ( Mongo Expressed Node)

3.install Mango DB
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4

echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list

sudo apt-get update

sudo apt-get install -y mongodb-org

mkdir data

echo 'mongod --dbpath=data --nojournal' > mongod

chmod a+x mongod

---exit mongo shell 
---Ctrl C to exit mongodb
---./mongod if it is in the same file folder, if not then will just be mongod

4.cmds
mongod --open db
mongo  --open shell ctrl c to quit
help
show 
//show dbs we have 
use
//use or create sth

"CRUD"
insert

find（）
//default return everything, the id is generated by mango, unique
db.dogs.find({a object})

update
db.dogs.find({name:"Lulu", bread: "changeit to sth"}) // the second thing is the thing we want to update canbe a ($set: {})

remove
//by default remove everything matches


5. Mongoose
Object Document Modeling (ODM) package for Express called Mongoose.
a javaScript layer on top of mongo db


var mongoose = require("mongoose");
mongoose.connect("mongodb ://localhost/cat_app");

//a pattern
var catSchema = new mongoose.Schema({
  name: String,
  age: Number,
  temperament:String
});

var Cat = mongoose.model("Cat", catSchema)  // will generate sth like db.cats, first Cat is a single instance

var george = new Cat({
  name: "st",
  age: 11,
  xxx:xxx
});

//pass a call back function to make sure your stuff is saved
george.save(function(err,cat){  //(potentional err, cat is what send back from data base)
  if(err){
    console.log("sth is wrong");
    console.log(err);
    } else {
      console.log("worked");
      console.log(cat); //cat is different than george
   }
});


Cat.find({}, function(err,cats){  //all thing, (potentional err, cats is what send back from data base)
  if(err){
    console.log("sth is wrong");
    console.log(err);
    } else {
      console.log("worked");
      console.log(cats); // get all the cats
   }
});


Cat.create({
name:xxx  // u can send less than 3, won't crash 
}, function (err, cat) {
 if 
 else
}
});



